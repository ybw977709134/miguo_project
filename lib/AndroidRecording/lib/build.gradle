import com.android.builder.core.DefaultManifestParser

apply plugin: 'android-library'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}

allprojects {
    repositories {
        maven { url System.getenv('HOME') + '/.m2/repository' }
        flatDir {
            dirs '../lib/build/outputs/aar'
        }
    }
}

dependencies {
    compile files('libs/simplesound-0.1.jar')
    compile 'com.android.support:support-v4:21.0.2'
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        // Enabling multidex support.
        multiDexEnabled false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard-project.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        abortOnError false
        disable 'OldTargetApi', 'SimpleDateFormat', 'StringFormatInvalid', 'InvalidPackage', 'PropertyEscape'
    }

    def manifestParser = new DefaultManifestParser();
    def ver = manifestParser.getVersionName(
            android.sourceSets.main.manifest.srcFile);

    libraryVariants.all { variant ->

        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    variant.name == 'debug' 
                        ? "recording-${variant.name}-${ver}.aar"
                        : "recording-${ver}.aar");
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                def MAVEN_LOCAL_PATH = 'file://' + System.getenv('HOME') + "/.m2/repository/";
                repository(url: MAVEN_LOCAL_PATH)
                    pom.groupId = 'com.skd'
                    pom.artifactId = 'recording'
                    pom.version = ver
            }
        }
    }
}


